#!/usr/bin/env bash
#------------------------------------------------------------------------------
# Copyright (c) 2011-2013, Think Big Analytics, Inc. All Rights Reserved.
#------------------------------------------------------------------------------
# to-log-level - Convert a log level number to the corresponding name.

thisdir=$(dirname $BASH_SOURCE)
. $thisdir/common.sh

if [[ "$1" =~ --?h.* ]]
then
  cat <<EOF
$0 - Convert a log level number to the corresponding name.

Usage: $0 N [default]

Where:
  N        A number between 0-7, inclusive (the valid SYSLOG levels.)
           Or, if you provide a name, it will be returned, as long as it is 
           one of following (case ignored):
           ${STAMPEDE_LOG_LEVEL_NAMES[@]}.
           However, if you happen to provide a string, it will be returned, 
           as long as it is one of the valid names.

  default  What to return if an invalid number (or name) is specified. It can 
           be any string you want. If not specified the invalid number will be 
           logged as a WARNING and the string "$STAMPEDE_LOG_DEFAULT_TO_LOG_LEVEL_VALUE" will be returned.
EOF
exit 0
fi

function handle_error {
  input=$1
  default=$2
  if [ "$default" = "" ]
  then
    default=$STAMPEDE_LOG_DEFAULT_TO_LOG_LEVEL_VALUE
    warning "$0: Unrecognized log level number or name \"$input\" given! Returning \"$default\"."
  fi
  echo $default
}

case $1 in
  [0-9]*)
    let n=$1
    if [ $n -lt $STAMPEDE_MIN_LOG_LEVEL -o $n -gt $STAMPEDE_MAX_LOG_LEVEL ]
    then
      handle_error "$@"
    else
      echo ${STAMPEDE_LOG_LEVEL_NAMES[$n]}
    fi
    ;;
  *)
    name=$(echo $1 | tr "[:lower:]" "[:upper:]")
    for f in ${STAMPEDE_LOG_LEVEL_NAMES[@]}
    do
      if [ "$f" = "$name" ]
      then
        echo "$f"
        exit 0;
      fi
    done
    handle_error "$@"
    ;;
esac
