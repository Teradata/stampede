#!/usr/bin/env bash
#------------------------------------------------------------------------------
# Copyright (c) 2011-2013, Think Big Analytics, Inc. All Rights Reserved.
#------------------------------------------------------------------------------
# to-seconds - Compute the seconds specified by the argument.

thisdir=$(dirname $BASH_SOURCE)
. $thisdir/common.sh

if [[ "$1" =~ --?h.* ]]
then
  cat <<EOF
$0 - Compute the seconds specified by the argument. Returns an integer.

Usage: $0 Nx

Where:
  Nx      The time argument, where "N" is an integer and "x" is optional, one of the
          characters 'h', 'm', or 's', interpreted as follows:
            'h' means "N" is interpreted as hours. Returns N*3600.
            'm' means "N" is interpreted as minutes. Returns N*60.
            's' means "N" is interpreted as seconds (the default). Simply returns N.

NOTE: days, months, and years aren't supported, because then you would have 
to specify a date to know the context, e.g., for daylight savings time,
leap years, etc. 

See also "bin/to-time-interval" and "bin/dates" instead for the more general case.
EOF
exit 0
fi

nn=$(echo $1 | sed -e 's/[^0-9]\+//')
units=$(echo $1 | sed -e 's/[0-9]\+//')
if [ -z "$nn" ]
then
  let n=0
else
  let n=$nn
fi
if [ -z "$units" -o "$units" = "s" ]
then
  echo $n
else
  case $units in
    m)  
      let n2=$n*60
      echo $n2
      ;;
    h)  
      let n2=$n*3600
      echo $n2
      ;;
    *)
      die "Unsupported units for to-seconds: $units"
      ;;
  esac
fi

