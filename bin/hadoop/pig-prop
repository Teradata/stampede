#!/usr/bin/env bash
#------------------------------------------------------------------------------
# Copyright (c) 2011-2013, Think Big Analytics, Inc. All Rights Reserved.
#------------------------------------------------------------------------------
# pig-prop - Show the value for one or more Pig properties from the 
# $PIG_HOME/conf/pig.properties file.

. "$STAMPEDE_HOME/bin/common.sh"

function help {
  cat <<EOF
$0 - Show the value for one or more Pig variables or properties as defined in "pig.properties".

Usage: $0 [-h | --help] [-v | --verbose] [--print-keys | --print-values] \ 
          [-f file | --prop-file=file] 
          [--all | --regex=re1 [--regex=re2] string1 [string2] ...]

Where:
  -h | --help      Show this message.
  -v | --verbose   Echo the path to the Pig properties file read.
  --print-keys     Print all matching keys in the "key=value" pairs
                   (default: print the full "key=value").
  --print-values   Print only the values for the matching keys.
                   (Confusing for multiple matches!)
  -f file
  --prop-file=file Use "file" instead of searching for the properties file.
  --all            Show ALL properties.
  --regex=re       Regular expression matching all or part of the property name.
  string           String matching the WHOLE the property name.

Either "-all" or one or more combinations of "--regex=re" and/or strings is required.
NOTE: Only reads the first property file it finds. Eventually, we would like to call
Pig with a custom UDF to determine the property values.
EOF
}

function find_prop_file {
  dirs=()
  pig=$(which pig)
  [ $? -eq 0 ] && dirs[0]=${pig%/bin/pig}
  dirs=(${dirs[@]}
    /usr/lib/pig
    /etc/pig 
    /usr/local/lib/pig
    /usr/local/etc/pig
    "$PIG_HOME/conf/pig.properties")

  for dir in ${dirs[@]}
  do
    if [ -f $dir/conf/pig.properties ]
    then
      echo $dir/conf/pig.properties
      return 0
    fi
  done
  return 1
}

function verify_prop_file {
  if [ ! -f "$1" ]
  then
    echo "The specified property file \"$1\" does not exist."
    exit 1
  fi
}

VERBOSE=
strings=()
regexs=()
let print_kv=0
let all=1
while [ $# -ne 0 ]
do
  case $1 in
    -h*|--h*)
      help
      exit 0
      ;;
    -v*|--v*)
      VERBOSE=true
      ;;
    --a*)
      all=0
      ;;
    --print-k*)
      let print_kv=-1
      ;;
    --prop*-file=*)
      prop_file=${1#--prop*-file=}
      verify_prop_file "$prop_file"
      ;;
    -f)
      shift
      prop_file=$1
      verify_prop_file "$prop_file"
      ;;
    --print-v*)
      let print_kv=1
      ;;
    --regex=*)
      regexs[${#regexs[@]}]=${1#--regex=}
      ;;
    -*)
      echo "$0: ERROR: Unrecognized argument \"$1\"."
      help
      exit 1
      ;;
    *)
      strings[${#strings[@]}]="$1"
      ;;
  esac
  shift
done

if [ $all -ne 0 -a ${#regexs[@]} -eq 0 -a ${#strings[@]} -eq 0 ]
then
  echo "$0: ERROR: Must specify one or more names, --regex=re, or --all"
  help
  exit 1
fi

[ -n "$prop_file" ] || prop_file=$(find_prop_file)
if [ $? -ne 0 ]
then
  echo "The Pig properties file was not found using your path and several system directories."
  echo "Define \$PIG_HOME or add pig to your path."
  exit 1
fi
[ -n "$VERBOSE" ] && echo "Using pig properties file: $prop_file"
 
thisdir=$(dirname ${BASH_SOURCE[0]})
. $thisdir/prop-helper.sh

# Cat the file and strip out comment and empty lines.
$NOOP cat "$prop_file" | grep -v '^#' | grep -v '^[ \t]*$' | each_line
