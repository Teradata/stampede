#!/usr/bin/env bash
#------------------------------------------------------------------------------
# Copyright (c) 2011-2013, Think Big Analytics, Inc. All Rights Reserved.
#------------------------------------------------------------------------------
# hive-prop - Show the value for one or more Hive variables or properties.

. "$STAMPEDE_HOME/bin/common.sh"

function help {
  cat <<EOF
$0 - Show the values for one or more Hive variables or properties.
     It determines the property values by running the command "hive -e 'set -v;'".

Usage: $0 [-h | --help] [-v | --verbose] [--print-keys | --print-values] \ 
          [--all | --regex=re1 [--regex=re2] string1 [string2] ...]

Where:
  -h | --help    Show this message.
  -v | --verbose Echo the path to the Hive CLI invoked.
  --print-keys   Print all matching keys in the "key=value" pairs
                 (default: print the full "key=value" strings).
  --print-values Print only the values for the matching keys.
                 (Confusing for multiple matches!)
  --all          Show ALL variables and properties.
  -d | --define key=value
  --hiveconf property=value
  --hivevar key=value
  -i include_file
                 Hive options that are passed to the Hive CLI. All other Hive options
                 are incompatible with this utility.
  --regex=re     Regular expression matching all or part of the property name.
  string         String matching the WHOLE the property name.

Either "-all" or one or more combinations of "--regex=re" and/or strings is required.
EOF
}

function find_hive {
  hive=$(which hive)
  if [ $? -eq 0 ]
  then
    echo $hive
    return 0
  fi
  for hive in "$HIVE_HOME/bin/hive" /usr/local/bin/hive /usr/bin/hive /bin/hive
  do
    if [ -x "$hive" ]
    then
      echo "$hive"
      return 0
    fi
  done
  return 1
}

export VERBOSE=

strings=()
regexs=()
hive_args=()
let print_kv=0
let all=1
while [ $# -ne 0 ]
do
  case $1 in
    -h*|--h*)
      help
      exit 0
      ;;
    -v*|--v*)
      VERBOSE=true
      ;;
    --a*)
      all=0
      ;;
    --print-k*)
      let print_kv=-1
      ;;
    --print-v*)
      let print_kv=1
      ;;
    -d|--define|--hiveconf|--hivevar|-i)
      hive_args[${#hive_args[@]}]=$1
      shift
      hive_args[${#hive_args[@]}]=$1
      ;;
    --regex=*)
      regexs[${#regexs[@]}]=${1#--regex=}
      ;;
    -*)
      echo "$0: ERROR: Unrecognized argument \"$1\"."
      help
      exit 1
      ;;
    *)
      strings[${#strings[@]}]="$1"
      ;;
  esac
  shift
done

if [ $all -ne 0 -a ${#regexs[@]} -eq 0 -a ${#strings[@]} -eq 0 ]
then
  echo "$0: ERROR: Must specify one or more names, --regex=re, or --all"
  help
  exit 1
fi

hive=$(find_hive)
if [ $? -ne 0 ]
then
  echo "The hive command was not found on your path, several system directories."
  echo "Define \$HIVE_HOME or add hive to your path."
  exit 1
fi

[ -n "$VERBOSE" ] && echo "Using hive CLI: $hive ${hive_args[@]} -e 'set -v;'"

thisdir=$(dirname ${BASH_SOURCE[0]})
. $thisdir/prop-helper.sh

$NOOP "$hive" "${hive_args[@]}" -e 'set -v;' 2> /dev/null | grep -v PREEXEC_CMD | each_line
