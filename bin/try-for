#!/usr/bin/env bash
#------------------------------------------------------------------------------
# Copyright (c) 2011-2013, Think Big Analytics, Inc. All Rights Reserved.
#------------------------------------------------------------------------------
# try-for - Keep trying an expression until it succeeds or a time window expires.

thisdir=$(dirname ${BASH_SOURCE[0]})
. $thisdir/common.sh

if [[ "$1" =~ --?h.* ]]
then
  cat <<EOF
$0 - Keep trying an expression until it succeeds, sleeping between attempts
     for a time delta and finally stopping with a failure after unsuccessfully
     trying when a time window expires.

Usage: $0 time_duration time_between_attempts expression

Where:
  time_duration          How much time to keep trying the expression before 
                         giving up. After this point in time, a failure status
                         of 1 is returned. Format is "Nx". See "to-seconds --help"
                         for the required format of this argument.
  time_between_attempts  How long to wait between attempts. Format is "Nx".
                         See "to-seconds --help" for the required format.
  expression             The remaining arguments are the bash expression to try on
                         every iteration. It must return a status of 0 when evaluated
                         to indicate success and nonzero for failure. For example,
                         "ls foo" returns 0 if "foo" exists, otherwise it returns 1.

Contrast with "try-until", where you specify a timestamp at which point it stops trying. 
Here you specify a window of time.
NOTES: 
  1) The process will sleep between attempts.
  2) If you don't want the expression's output, redirect to "/dev/null".
EOF
exit 0
fi

let wait_time=$(to-seconds $1)
shift
retry_every=$1
shift
let end=$(dates --format="%s" 1:1 $wait_time S)
_do_try $end $retry_every "$@"
exit $?
