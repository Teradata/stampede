#!/usr/bin/env bash
#------------------------------------------------------------------------------
# Copyright (c) 2011-2013, Think Big Analytics, Inc. All Rights Reserved.
#------------------------------------------------------------------------------
# to-time-interval - Compute the a time-interval string specified by the argument.

thisdir=$(dirname ${BASH_SOURCE[0]})
. $thisdir/common.sh

if [[ "$1" =~ --?h.* ]]
then
  cat <<EOF
$0 - Compute the a time-interval string specified by the argument.

Usage: $0 Nx

Where:
  Nx      The time argument, where "N" is an integer and "x" is optional, one of the
          characters 'h', 'm', or 's', interpreted as follows:
            'h' means "N" is interpreted as hours. Returns "N hours".
            'm' means "N" is interpreted as minutes. Returns "N minutes".
            's' means "N" is interpreted as seconds (the default). Returns "N seconds".
          However, if N=1, then the singular of the units is returned.

NOTE: days, months, and years aren't supported, because then you would have 
to specify a date to know the context, e.g., for daylight savings time,
leap years, etc. 

See also "bin/to-seconds" and "bin/dates" instead for the more general case.
EOF
exit 0
fi

nn=$(echo $1 | sed -e 's/[^0-9]\+//')
units=$(echo $1 | sed -e 's/[0-9]\+//')
if [ -z "$nn" ]
then
  let n=0
else
  let n=$nn
fi
[ -z "$units" ] && units="s"
case $units in
  s)  
    u=second
    ;;
  m)  
    u=minute
    ;;
  h)  
    u=hour
    ;;
  *)
    die "Unsupported units for to-time-interval: $units"
    ;;
esac

[ $n -eq 1 ] || u="${u}s"

echo "$n $u"
